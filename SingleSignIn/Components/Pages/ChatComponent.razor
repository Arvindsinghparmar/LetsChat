@page "/chat"
@inject IChatService ChatService
@rendermode InteractiveServer
<PageTitle>Let's Chat</PageTitle>
<div class="chat-container">
    <div class="card shadow-lg">
        <div class="card-header bg-primary text-white">
            Live Chat
        </div>
        <div class="card-body chat-container">
            <ul class="list-group message-list" style="max-height: 300px; overflow-y: auto;">
                @foreach (var chat in messages)
                {
                    <li class="list-group-item">@chat.Username : @chat.Content</li>
                }
                <p class="text-muted">@TypingStatus</p>
            </ul>
        </div>

        <div class="card-footer">
            <input class="form-control mb-2" @bind="username" placeholder="Enter Your Name" />
            <textarea class="form-control mb-2" @bind="messageInput" @oninput="OnMessageTyping" placeholder="Type your message"></textarea>
            <button class="btn btn-primary w-100" @onclick="SendMessage">Send</button>
        </div>
    </div>
</div>

@code {
    private List<ChatMessage> messages = new();
    private string username = "";
    private string messageInput = "";
    private string UType = "";
    private string TypingStatus = "";

    protected override async Task OnInitializedAsync()
    {
        await ChatService.InitializeHubConnection();

        ChatService.OnReceiveMessage += (user, message) =>
        {
            var newMessage = new ChatMessage(user, message);
            messages.Add(newMessage);
            TypingStatus = string.Empty;
            InvokeAsync(StateHasChanged);
        };
        ChatService.OnUserTyping += (username) =>
        {
            TypingStatus = $"{username} is typing...";
            InvokeAsync(StateHasChanged);
        };
    }
    private async Task OnMessageTyping(){
        await ChatService.SendTypingNotification(username);
    }

    private async Task SendMessage()
    {
        if (!string.IsNullOrEmpty(messageInput) && !string.IsNullOrEmpty(username))
        {
            await ChatService.SendMessage(username, messageInput);
            messageInput = string.Empty;
        }
    }

    private async Task HandleKeyUp(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await SendMessage();
        }
    }
}